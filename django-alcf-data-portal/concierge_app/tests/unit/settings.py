# Settings.py for running pytest.

"""
Django settings for alcf_data_portal project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
import os
from concierge import CONCIERGE_SCOPE
from mdf_toolbox import KNOWN_SCOPES


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# Sets Django default, if the @login_required decorator is ever encountered
LOGIN_URL = '/login/globus'
# SECURITY WARNING: keep the secret key used in production secret!
SOCIAL_AUTH_GLOBUS_KEY = 'ecb27add-7b02-43a1-9da5-71fb4246395d'
# SOCIAL_AUTH_GLOBUS_SECRET = 'put this in alcf_data_portal/local_settings.py'
SECRET_KEY = 'use `openssl rand -hex 32` in local_settings.py in prod'

# Set DEBUG in local_settings.py
DEBUG = False

# Set minid creation to Test minids or Production Minids
MINID_TEST = True
# Set MDF tools and publishing to test or production
MDF_TEST = True

PROJECT_TITLE = 'PetrelData.net'
# This is custom, not currently supported by Globus Portal Framework.
# It needs to be injected into the global context_processor to work.
PORTAL_TAGLINE = 'Your Source for Science Data'

SEARCH_INDEXES = {
    'testindex': {
        'uuid': '945764d2-6cf6-4c0d-bea9-833c14d6803a',
        'name': 'Index for concierge unittests',
        # 'tagline': 'APS Beamline Data',
        'group': '',
        # 'template_override_dir': 'testindex',
        'fields': [
            ('title', 'GenericResultTitle'),
        ],
        'facets': [
            {
                "name": "Creator",
                "field_name": "dc.creators.creatorName",

            },
            {
                "name": "Subjects",
                "field_name": r"project_metadata.measurement\.instrument"
                              r"\.acquisition\.parent_folder",
            },
            {
                "name": "Formats",
                "field_name": "dc.formats",
            },
            {
                "name": "Dates",
                "field_name": "dc.dates.date",
                "type": "date_histogram",
                "date_interval": "day",
            },
        ]
        # 'result_format_version': '2019-08-27',
    }
}

TABBED_PROJECT_INDEXES = ['testindex']

RAMSES_SEARCH_CATEGORIES = ['Storage', 'Data Transfer', 'Compute', 'Network']


SEARCH_RESULTS_PER_PAGE = 10
SEARCH_MAX_PAGES = 10
# This will be the automatic search query when the user loads the page, if
# they have not submitted their own query or there is no query loaded in the
# session. "*" will automatically search everything, but may not be desirable
# if there is a lot of search data in the index, as searches will take a while
DEFAULT_QUERY = '*'

PREVIEW_DATA_SIZE = 2048

SOCIAL_AUTH_GLOBUS_SCOPE = [
    'urn:globus:auth:scope:search.api.globus.org:search',
    'urn:globus:auth:scope:transfer.api.globus.org:all',
    # petrel#RAMSES performance data http endpoint (for preview)
    'https://auth.globus.org/scopes/56ceac29-e98a-440a-a594-b41e7a084b62/all',
    CONCIERGE_SCOPE,
    KNOWN_SCOPES['mdf_connect'],
]

# Restricts which user tokens can be fetched for front-end use
ALLOWED_FRONTEND_TOKENS = [
    'petrel_https_server',
]

ALLOWED_HOSTS = []

# Fix Globus transfer for Django 2.1. Samesite flag with helper pages results
# in the user being logged out when redirected back to the portal
# https://github.com/globusonline/django-globus-portal-framework/issues/51
SESSION_COOKIE_SAMESITE = None

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sitemaps',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    # This contains general Globus portal tools
    'globus_portal_framework',
    'social_django',
    'alcf_data_portal',
    'concierge_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    'globus_portal_framework.middleware.GlobusAuthExceptionMiddleware',
    'globus_portal_framework.middleware.ExpiredTokenMiddleware',

]

AUTHENTICATION_BACKENDS = [
    'globus_portal_framework.auth.GlobusOpenIdConnect',
    'django.contrib.auth.backends.ModelBackend',
]

ROOT_URLCONF = 'concierge_app.tests.unit.pytest_urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'alcf_data_portal', 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
                'globus_portal_framework.context_processors.globals',
                'alcf_data_portal.context_processors.globals',
            ],
        },
    },
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'stream': {
            'level': 'WARNING',
            'class': 'logging.StreamHandler',
        },
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
    },

    'loggers': {
        'django.db.backends': {
                    'handlers': ['stream'],
                    # 'handlers': ['null'],  # Quiet by default!
                    # 'propagate': False,
                    'level': 'WARNING',
                    },
        'globus_portal_framework': {
            'handlers': ['stream'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'alcf_data_portal': {
            'handlers': ['stream'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'concierge_app': {
            'handlers': ['stream'],
            'level': 'DEBUG',
            'propagate': True,
        }
    },
}

WSGI_APPLICATION = 'alcf_data_portal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Chicago'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

# STATIC_ROOT = os.path.join(BASE_DIR, 'alcf_data_portal/static')
# print(STATIC_ROOT)
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'alcf_data_portal/static')
]
